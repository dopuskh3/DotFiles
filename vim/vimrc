"==========================================
"
" Francois Visconte <f.visconte@gmail.com>
"
"
"
"==========================================

set autoindent                      " always set autoindenting on
set backspace=indent,eol,start      " more powerful backspacing
set backupdir=/tmp
set clipboard=autoselect            " clipboard
set cmdheight=1                     " cmd line height
set confirm                         " confirm before quitting unsaved
set cursorline
set encoding=utf-8
set expandtab
set exrc                            " Run local .vimrc files in the CWD
set hidden                          " keep all file in memory
set history=50                      " keep 50 lines of command line history
set hlsearch                        " hilight search patern
set ignorecase                      " ignore case when searching
set incsearch                       " Incremental search
set laststatus=2
set matchpairs=(:),{:},[:],<:>
set matchtime=2                     " 20ms matchtime
set modeline
set modelines=5
set mouse=arc
set nobackup                        " Don't keep a backup file
set nocompatible                    " Use Vim defaults instead of 100% vi compatibility
set nocp
set nofoldenable                    " do not enable folding by default
set report=0                        " allways report changes in file
set ruler                           " show the cursor position all the time
set scrolloff=8                     " scroll buffer 8 line before/after
set shell=zsh                       " my shell
set shiftwidth=2                    " shift width
set showbreak=>\ \ \
set showcmd                         " Show (partial) command in status line.
set showmatch                       " Show matching brackets.
set smarttab
set softtabstop=2                   " soft tabs
set statusline=%58(%-15t\ \ %Y%M\ \ #%2n\ \ %3v,%-3l\ of\ %L\ \ %5P%)
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc
set tabstop=2
set tags=./tags
set textwidth=0                     " Don't wrap lines by default
set title                           " change terminal title
set ttyfast                         " i'm fast
set viminfo='20,\"50                " read/write a .viminfo file, don't store more than
set visualbell t_vb=""              " visual bell
set whichwrap=b,s,h,l,<,>,[,]       " when moving my cursor, wrap in all cases (don't get stuck at end of line, etc)
set wildmenu                        " show a list of file when completing
set wildmode=longest:list,full      " make file completion like bash
set wrap                            " wrap long lines
syntax on                           " Syntax hilighting by default
filetype off
filetype plugin indent on

" Enable Bundles 
"
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'

" Some bundles
"
Bundle "fholgado/minibufexpl.vim"
Bundle 'scrooloose/nerdtree'
Bundle 'Shougo/unite.vim'
Bundle 'altercation/vim-colors-solarized'
Bundle "rodjek/vim-puppet"
Bundle "Shougo/vimproc.vim"
Bundle "Lokaltog/vim-powerline"
Bundle "davidhalter/jedi-vim"
Bundle "klen/python-mode"
Bundle "lambdalisue/vim-python-virtualenv"
Bundle "majutsushi/tagbar"
Bundle "dhazel/conque-term"
Bundle "OmniCppComplete"
Bundle "altercation/vim-colors-solarized"
Bundle "sjl/badwolf"
" Bundle "justmao945/vim-clang"


" Tagbar configuration
"
nmap <F3> :TagbarToggle<CR>
let g:tagbar_right=1

" NERDTree configuration
"
let g:NERDTreeIgnore=['\.pyc$', '\~$']
let g:NERDTreeWinPos='left'

" Unite configuration
"
call unite#filters#matcher_default#use(['matcher_fuzzy'])
let g:unite_source_file_rec_max_cache_files=10000


" Python-mode configuration
"
let g:pymode_rope = 0
" Documentation
let g:pymode_doc = 1
let g:pymode_doc_key = 'K'
" Linting
let g:pymode_lint = 1
let g:pymode_lint_checker = "pylint,pep8"
" Auto check on save
let g:pymode_lint_write = 1
" Support virtualenv
let g:pymode_virtualenv = 1
" Enable breakpoints plugin
" let g:pymode_breakpoint = 1
" let g:pymode_breakpoint_key = '<leader>b'
"
" syntax highlighting
let g:pymode_syntax = 1
let g:pymode_syntax_all = 1
let g:pymode_syntax_indent_errors = g:pymode_syntax_all
let g:pymode_syntax_space_errors = g:pymode_syntax_all
" Don't autofold code
" let g:pymode_folding = 0

" Jedi configuration:
" 
let g:jedi#autocompletion_command = "<C-Space>"

" OmniCpp configuration:
"
let OmniCpp_MayCompleteDot=1
let OmniCpp_MayCompleteArrow=1
let OmniCpp_MayCompleteScope=1
let OmniCpp_SelectFirstItem = 2 " select first item (but don't insert)
let OmniCpp_NamespaceSearch = 2 " search namespaces in this and included files
let OmniCpp_ShowPrototypeInAbbr = 1 " show function prototype (i.e. parameters) in popup window
let OmniCpp_GlobalScopeSearch = 1
let OmniCpp_ShowAccess = 1
let OmniCpp_ShowPrototypeInAbbr = 1 " show function parameters
let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]

" Some custom functions
"
command -bang -nargs=? QFix call QFixToggle(<bang>0)
function! QFixToggle(forced)
  if exists("g:qfix_win") && a:forced == 0
    cclose
    unlet g:qfix_win
  else
    copen 10
    let g:qfix_win = bufnr("$")
  endif
endfunction

function! RTrim()
  let vw=winsaveview()
  %s/\v\s+$//e
  call winrestview(vw)
  noh
endfunction

" Keyboard mapping
"
map ;e :QFix<CR>
map ;t :NERDTreeToggle<CR>
map <F2> :NERDTreeToggle<CR>
nnoremap <C-p> :Unite -start-insert file_rec/async<CR>
nnoremap <space>/ :Unite grep:.<CR>
nnoremap <C-space> :Unite -quick-match buffer<CR>
map ;q :bp<CR>
map ;w :bn<CR>
map ;v gg=G<CR>
map ;n :set nu<CR>
map ;b :make<CR>
map ;u :set nonu<CR>
map ;f :fold<cr>
map ;c :e ~/.vimrc<CR>
map ;s :sh<CR>
map ;h :call MyPersonalHelp()<CR>
map ;z :cp<CR>
map ;x :cn<CR>
map <F11> :call Insert_datetime()<CR>
map ;fl :TMiniBufExplorer<CR>
map <C-LeftMouse> <C-]>
map <C-RightMouse> <C-T>

let mapleader=";"
let maplocalleader="_"


" Filetype specific commands
"
if has("autocmd")
  autocmd BufWinLeave *.* mkview
  autocmd BufWinEnter *.* silent loadview
  autocmd BufWritePre *.py,*.txt,*.hh,*h,*.hpp,*.c,*.cpp,*.pp,*.html,*.js,*.css,*.rb,*.groovy call RTrim()
  autocmd FileType python highlight Excess ctermbg=DarkGrey guibg=Black
  autocmd Filetype python match Excess /\%100v.*/
  autocmd FileType python set tags+=python_tags,tags
  " autocmd Filetype python silent! !ctags -R ./&
  autocmd Filetype python set tags+=./python_tags
  autocmd Filetype cpp set tags+=~/.vim/tags/stl
  autocmd Filetype cpp set omnifunc=omni#cpp#complete#Main
  " autocmd Filetype cpp inoremap <C-P> <C-X><C-O>

endif " Has autocmd


au CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif
set completeopt=menuone,menu,longest,preview


" let us view mapages
runtime ftplugin/man.vim

" GUI specific things
"
set t_Co=256
set bg=dark
if has("gui_running")
  set guioptions=mr
  set guifont=Inconsolata\ 12
endif
colorscheme tomorrow-night-eighties
